package org.bitbucket.bpark.airules;

//import org.bitbucket.bpark.verix.rules.facts.Conversation;
//import org.bitbucket.bpark.verix.rules.facts.RuleMessage
//import org.bitbucket.bpark.verix.rules.time.TimeOfDay

import com.github.bpark.semantics.demo.rules.FromFact;
import com.github.bpark.semantics.demo.rules.Detail;


global java.util.List list
global org.eclipse.rdf4j.model.impl.SimpleValueFactory vf

rule "demo from"
    dialect "mvel"
    when
        $fact  : FromFact()
        $item  : Detail( name == "test") from $fact.listByResource(vf.createIRI("http://www.google.de", "123"))
    then
        System.out.println($item.getName());
end

rule "demo from boolean"
    dialect "mvel"
    when
        $fact  : FromFact()
        $item  : Boolean() from $fact.containsResource(vf.createIRI("http://www.google.de", "123"))
    then
        System.out.println($item);
end

/*
rule "init conversation"
    dialect "mvel"
    when
        m
    then
end

rule "hello day/night"
    dialect "mvel"
    when
        m : Conversation(lastContent == "$hello", deltaTime.seconds >= 30,
                         TimeOfDay.is(lastMessage.created) == TimeOfDay.DAY)
    then
        m.addMessage(new RuleMessage(0, "#hello"));
        System.out.println("-> hello day/night");
end
*/

/*
rule "hello morning"
    dialect "mvel"
    when
        m : Conversation(lastContent == "$hello", deltaTime.seconds >= 30)
    then
        m.addMessage(new RuleMessage(0, "#goodmorning"));
        System.out.println("-> hello morning");
end*/

/*
rule "repeated hello"
dialect "mvel"
    when
        m : Conversation(lastContent == "$hello", deltaTime.seconds < 30)
    then
        m.addMessage(new RuleMessage(0, "#repeated hello"));
        System.out.println("-> repeated hello");
end
*/